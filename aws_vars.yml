---
## Name of lab. This is used to tag instances
lab_name: rhte

## Name of the individual using the lab. For full class deploy this is usually 'student' but for development this can be anything to uniquely identify all instances
lab_user: student

## Count of Tower instances to instantiate
student_count: 1
# These are normally set to start at 1 and end at {{ student_count }} but can be customized as needed
student_count_start: 1
student_count_end: "{{ student_count }}"

## OpenShift Version to use, this will enable the correct repositories
openshift_deploy_version: 3.7

## OpenShift Variables
openshift_master_dns_prefix: "master"
openshift_master_internal_dns_prefix: "master-internal"

## Domain to use for wildcard
domain_name: labs.sysdeseng.com

## AWS credentials (do not save it here, instead override with -e)
aws_access_key: "{{ec2_access_key}}"
aws_secret_key: "{{ec2_secret_key}}"

## Set the AMI IDs here (or override with -e). Some commonly used AMIs are defined here, but ultimately the ones that matter are 'tower_ami_id' and 'ocp_ami_id'
## Tower AMI ID - This is the only variable used in the Playbooks, set it to one of the above (or override with -e)
tower_ami_id: "{{ tower_ami_id }}"
## OCP ID - This is the only variable used in the Playbooks, set it to one of the above (or override with -e)
ocp_ami_id: "{{ ocp_ami_id }}"

## AWS Info
tower_inst_type: t2.medium
ocp_master_inst_type: t2.large
ocp_node_inst_type: t2.xlarge
# The subnet_id can be dynamically set if initially creating it at the same time with the aws_vpc_keypair.yml playbook. Setting is statically for now
aws_subnet_id: "{{ aws_subnet_id }}"
aws_region: "{{ aws_region }}"
aws_az_1: "{{ aws_region }}a"
aws_sec_group: "{{ aws_sec_group }}"
aws_key_name: "{{ aws_key_name }}"

# AWS VPC configuration - this is used to setup a new Region
# Provide a default name for the VPC
aws_vpc_name: "{{ aws_vpc_name }}"
# VPC requires a CIDR block. The key is to ensure that it doesn't conflict with an existing CIDR.
aws_vpc_cidr_block: "{{ aws_vpc_cidr_block }}"
# Same as CIDR block
aws_subnet_cidr: "{{ aws_subnet_cidr }}"
# Name the VPC subnet, route table, security group and provide a security group description.
aws_subnet_name: "{{ aws_subnet_name }}"
aws_route_table: "{{ aws_route_table }}"

## Instance details
aws_instances:
- name: master
  type: "{{ ocp_master_inst_type }}"
  image: "{{ ocp_ami_id }}"
  meta:
    node_type: 'master'
    node_labels:
      type: infra
      zone: default
  groups:
    - masters
    - osev3
    - creator_"{{ lab_user }}"
- name: node1
  type: "{{ ocp_node_inst_type }}"
  image: "{{ ocp_ami_id }}"
  meta:
    node_type: 'node'
    node_labels:
      type: app
      zone: default
  groups:
    - nodes
    - osev3
    - creator_"{{ lab_user }}"
aws_scaleup_instances:
- name: node2
  type: "{{ ocp_node_inst_type }}"
  image: "{{ ocp_ami_id }}"
  meta:
    node_type: 'node'
    node_labels:
      type: app
      zone: default
  groups:
    - nodes
    - osev3
    - creator_"{{ lab_user }}"
