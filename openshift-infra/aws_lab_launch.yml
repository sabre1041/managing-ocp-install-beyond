---
- name: Create Lab For Students
  hosts: localhost
  gather_facts: no
  vars_files:
    - aws_vars.yml
  tasks:
  - name: Provision AWS Tower Instances
    ec2:
      aws_access_key: "{{ec2_access_key}}"
      aws_secret_key: "{{ec2_secret_key}}"
      key_name: "{{ aws_key_name }}"
      group: "{{ aws_sec_group }}"
      instance_type: "{{ tower_inst_type }}"
      image: "{{ tower_ami_id }}"
      wait: true
      instance_tags:
        Name: "{{ lab_name + '-tower-' + lab_creator + '-' + item }}"
        lab_name: "{{ lab_name }}"
        lab_creator: "{{ lab_creator }}"
        lab_role: "ansible-tower"
        student_id: "student-{{ item }}"
      vpc_subnet_id: "{{ aws_subnet_id }}"
      zone: "{{ aws_az_1 }}"
      assign_public_ip: yes
      region: "{{ aws_region }}"
      state: present
    with_sequence: count={{ student_count }}
    register: instances_created

  - debug:
      var: instances_created
      verbosity: 2

  - name: Wait for ssh
    wait_for:
      port: 22
      host: "{{ item.instances.0.public_ip }}"
      timeout: 600
    with_items: "{{ instances_created.results }}"

  - add_host:
      name: "{{ item.instances.0.public_dns_name }}"
      friendly_name: "{{ item.instances.0.tags.Name }}"
      public_ip: "{{ item.instances.0.public_ip }}"
      groups: tower_instances
      student_id: "{{ item.instances.0.tags.student_id }}"
    with_items: "{{ instances_created.results }}"

  - debug:
      var: groups
      verbosity: 2

- hosts: tower_instances
  gather_facts: no
  vars:
    ansible_ssh_user: ec2-user
    ansible_python_interpreter: "python"
    #ansible_python_interpreter: "{{ ansible_playbook_python }}"
  vars_files:
    - aws_vars.yml

  tasks:
    - name: Install package requirements
      yum:
        name: "{{ item }}"
        state: present
      become: true
      with_items:
        - python2-pip
        - git
        - pyOpenSSL
        - python-netaddr
        - python-six
        - python2-boto3
        - python-click
        - python-httplib2
    
    - name: Install Tower CLI
      pip:
        name: "{{ item }}"
      become: true
      with_items:
        - ansible-tower-cli
        - boto

    - set_fact:
        filter: "{{ 'tag' + ':' + 'student_id=' + hostvars[inventory_hostname].student_id }}"
    - debug:
        var: "{{ item }}"
        verbosity: 2
      with_items:
        - hostvars[inventory_hostname].friendly_name
        - hostvars[inventory_hostname].public_ip
        - hostvars[inventory_hostname].student_id
        - tower_username
        - tower_password
        - filter

    - name: Update Tower inventory
      tower_inventory:
        tower_host: "{{ hostvars[inventory_hostname].public_ip }}"
        tower_username: "{{ tower_username }}"
        tower_password: "{{ tower_password }}"
        name: OpenShift
        organization: Default
        variables:
          - student_id: "{{ hostvars[inventory_hostname].student_id }}"
    - name: Update tower group
      tower_group:
        tower_host: "{{ hostvars[inventory_hostname].public_ip }}"
        tower_username: "{{ tower_username }}"
        tower_password: "{{ tower_password }}"
        name: AWS
        source: ec2
        credential: AWS
        inventory: "OpenShift"
        instance_filters: "{{ 'tag' + ':' + 'student_id=' + hostvars[inventory_hostname].student_id }}"
        source_vars:
          regions: "{{ aws_region }}"
          vpc_destination_variable: public_dns_name
          hostname_variable: tag_Name
        state: present
